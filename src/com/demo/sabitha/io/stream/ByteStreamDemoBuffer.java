package com.demo.sabitha.io.stream;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Base64;

public class ByteStreamDemoBuffer {
	public static void main(String[] args) {
		String filepath="sabitha/images/Test2.jpg";
		String value="";
		Bufferwriter(filepath,value);
		Bufferreader(filepath);

	}

	private static void Bufferreader(String filepath) {
		
		try (BufferedInputStream Bfis=new BufferedInputStream(new FileInputStream(filepath))){
			byte[] readerbyte=Bfis.readAllBytes();
			System.out.println(readerbyte);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	private static void Bufferwriter(String filepath, String value) {
		byte[] images=Base64.getDecoder().decode(value);
		try (BufferedOutputStream Bfos=new BufferedOutputStream(new FileOutputStream(filepath))){
			Bfos.write(images);
			System.out.println("success");
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
}
